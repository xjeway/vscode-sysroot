name: Build Sysroot Packages

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, aarch64]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build sysroot for ${{ matrix.arch }}
      run: |
        make sysroot-${{ matrix.arch }}

    - name: Upload sysroot artifact
      uses: actions/upload-artifact@v4
      with:
        name: sysroot-${{ matrix.arch }}
        path: toolchain/vscode-sysroot-${{ matrix.arch }}-linux-gnu.tgz
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create architecture-specific release packages
      run: |
        mkdir -p release
        for arch in x86_64 aarch64 armhf; do
          if [ -f "artifacts/sysroot-$arch/vscode-sysroot-$arch-linux-gnu.tgz" ]; then
            echo "Creating release package for $arch..."
            mkdir -p "release/$arch"
            cp "artifacts/sysroot-$arch/vscode-sysroot-$arch-linux-gnu.tgz" "release/$arch/"
            cp sysroot.sh "release/$arch/"
            cp README.md "release/$arch/"
            # 创建架构特定的安装说明
            cat INSTALL.md > "release/$arch/INSTALL.md"
            # 创建架构特定的发布包
            tar -czf "vscode-sysroot-$arch-${{ github.ref_name }}.tar.gz" -C "release/$arch" .
            echo "Created vscode-sysroot-$arch-${{ github.ref_name }}.tar.gz"
          fi
        done

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          vscode-sysroot-x86_64-${{ github.ref_name }}.tar.gz
          vscode-sysroot-aarch64-${{ github.ref_name }}.tar.gz
          vscode-sysroot-armhf-${{ github.ref_name }}.tar.gz
        generate_release_notes: true
        body: |
          ## VS Code Sysroot Packages
          
          This release provides sysroot packages for different architectures to enable VS Code 1.99+ on legacy Linux systems.
          
          ### Available Architectures
          - **x86_64**: 64-bit x86 architecture
          - **aarch64**: 64-bit ARM architecture  
          - **armhf**: ARM hard-float architecture
          
          ### Installation
          1. Download the appropriate package for your target architecture
          2. Extract the sysroot: `tar zxf vscode-sysroot-<arch>-<version>.tar.gz -C ~/.vscode-server`
          3. Copy the environment script: `cp sysroot.sh ~/.vscode-server/sysroot.sh`
          4. Source the environment: `echo "source ~/.vscode-server/sysroot.sh" >> ~/.bashrc`
          5. Connect to your remote server in VS Code
          
          ### Compatibility
          - CentOS 7.9 / RHEL 7.9 / Oracle Linux 7.9
          - VS Code 1.99+
          - glibc 2.28, kernel 3.10
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
